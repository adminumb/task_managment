version: '3.8'
services:
  postgres:
    image: postgres:13
    container_name: task_management_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 33386
      POSTGRES_DB: task-service
    ports:
      - "5433:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - spring-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    networks:
      - spring-net
    depends_on:
      postgres:
        condition: service_healthy

  eureka-server:
    container_name: eureka-server
    build:
      context: ../eureka-server
    ports:
      - "8761:8761"
    networks:
      - spring-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  config-server:
    container_name: config-server
    build:
      context: ../config-server
    depends_on:
      eureka-server:
        condition: service_healthy
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    ports:
      - "8888:8888"
    networks:
      - spring-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - spring-net

  gateway-service:
    build:
      context: ../gateway-service
    container_name: gateway-service
    ports:
      - "8081:8081"
    depends_on:
      - eureka-server
      - config-server
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      ZIPKIN_ENDPOINT: http://zipkin:9411/api/v2/spans
    networks:
      - spring-net


  task-service:
    build: .
    container_name: task-service
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    environment:
      SERVER_PORT: 8080
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5433/task-service
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 33386
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_INSTANCE_PREFERIPADDRESS: "true"
      EUREKA_INSTANCE_HOSTNAME: "task-service"
      EUREKA_CLIENT_ENABLED: "true"
      EUREKA_INSTANCE_NON_SECURE_PORT_ENABLED: "true"
      EUREKA_INSTANCE_NON_SECURE_PORT: "8080"
      SPRING_CLOUD_CONFIG_DISCOVERY_ENABLED: "true"
      SPRING_CLOUD_CONFIG_DISCOVERY_SERVICE_ID: "config-server"
      SPRING_CLOUD_CONFIG_FAIL_FAST: "true"
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      SPRING_PROFILES_ACTIVE: "default"
      SPRING_CLOUD_CONFIG_ENABLED: "true"
      ZIPKIN_ENDPOINT: http://zipkin:9411/api/v2/spans
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: "true"
      EUREKA_CLIENT_FETCH_REGISTRY: "true"
      EUREKA_INSTANCE_INSTANCE_ID: "task-service:${RANDOM}"
    networks:
      - spring-net

volumes:
  postgres-data:

networks:
  spring-net:
    driver: bridge
